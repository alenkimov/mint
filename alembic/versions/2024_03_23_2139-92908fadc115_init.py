"""init

Revision ID: 92908fadc115
Revises: 
Create Date: 2024-03-23 21:39:54.383068

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "92908fadc115"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "discord_account",
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=True),
        sa.Column("username", sa.String(length=32), nullable=True),
        sa.Column("email", sa.String(length=254), nullable=True),
        sa.Column("phone", sa.String(length=18), nullable=True),
        sa.Column("name", sa.String(length=32), nullable=True),
        sa.Column("auth_token", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("UNKNOWN", "BAD_TOKEN", "GOOD", name="accountstatus"),
            nullable=False,
        ),
        sa.Column(
            "required_action",
            sa.Enum(
                "AGREEMENTS",
                "TOS_UPDATE_ACKNOWLEDGMENT",
                "REQUIRE_CAPTCHA",
                "REQUIRE_VERIFIED_EMAIL",
                "REQUIRE_REVERIFIED_EMAIL",
                "REQUIRE_VERIFIED_PHONE",
                "REQUIRE_REVERIFIED_PHONE",
                "REQUIRE_REVERIFIED_EMAIL_OR_VERIFIED_PHONE",
                "REQUIRE_VERIFIED_EMAIL_OR_REVERIFIED_PHONE",
                "REQUIRE_REVERIFIED_EMAIL_OR_REVERIFIED_PHONE",
                name="requiredaction",
            ),
            nullable=True,
        ),
        sa.Column("bound_to_another_mint_user", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("database_id"),
        sa.UniqueConstraint("auth_token"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(
        op.f("ix_discord_account_id"), "discord_account", ["id"], unique=True
    )
    op.create_table(
        "proxy",
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.Column("host", sa.String(length=253), nullable=False),
        sa.Column("port", sa.Integer(), nullable=False),
        sa.Column("login", sa.String(length=32), nullable=False),
        sa.Column("password", sa.String(length=128), nullable=False),
        sa.Column("protocol", sa.String(length=10), nullable=False),
        sa.PrimaryKeyConstraint("database_id"),
    )
    op.create_table(
        "twitter_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("description", sa.String(length=160), nullable=True),
        sa.Column("location", sa.String(length=30), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("followers_count", sa.Integer(), nullable=True),
        sa.Column("friends_count", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "wallet",
        sa.Column("private_key", sa.String(length=66), nullable=False),
        sa.Column("address", sa.String(length=42), nullable=False),
        sa.Column("ens_address", sa.String(length=251), nullable=True),
        sa.Column("verification_failed", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("address"),
        sa.UniqueConstraint("private_key"),
    )
    op.create_table(
        "discord_guild_join_status",
        sa.Column("discord_id", sa.Integer(), nullable=False),
        sa.Column("guild_id", sa.Integer(), nullable=False),
        sa.Column("invite_code", sa.String(length=32), nullable=True),
        sa.Column("joined", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["discord_id"],
            ["discord_account.id"],
        ),
        sa.PrimaryKeyConstraint("discord_id", "guild_id"),
    )
    op.create_table(
        "mint_user",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("tree_id", sa.Integer(), nullable=True),
        sa.Column("wallet_ens_address", sa.String(length=251), nullable=True),
        sa.Column("wallet_address", sa.String(length=42), nullable=False),
        sa.Column("inviter_user_id", sa.Integer(), nullable=True),
        sa.Column("invite_code", sa.String(length=8), nullable=True),
        sa.Column("invite_percent", sa.Integer(), nullable=True),
        sa.Column("me", sa.Integer(), nullable=False),
        sa.Column("injected_me", sa.Integer(), nullable=False),
        sa.Column("type", sa.String(length=100), nullable=False),
        sa.Column("stake_id", sa.Integer(), nullable=False),
        sa.Column("nft_id", sa.Integer(), nullable=False),
        sa.Column("nft_pass", sa.Integer(), nullable=False),
        sa.Column("signin", sa.Integer(), nullable=False),
        sa.Column("status", sa.String(length=100), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("twitter_id", sa.Integer(), nullable=True),
        sa.Column("discord_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["discord_id"],
            ["discord_account.id"],
        ),
        sa.ForeignKeyConstraint(
            ["inviter_user_id"],
            ["mint_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["twitter_id"],
            ["twitter_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["wallet_address"],
            ["wallet.address"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("invite_code"),
        sa.UniqueConstraint("tree_id"),
    )
    op.create_table(
        "twitter_account",
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.Column("auth_token", sa.String(), nullable=True),
        sa.Column("ct0", sa.String(length=160), nullable=True),
        sa.Column("username", sa.String(length=100), nullable=True),
        sa.Column("password", sa.String(length=128), nullable=True),
        sa.Column("email", sa.String(length=254), nullable=True),
        sa.Column("totp_secret", sa.String(length=16), nullable=True),
        sa.Column("backup_code", sa.String(length=12), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "UNKNOWN",
                "BAD_TOKEN",
                "SUSPENDED",
                "LOCKED",
                "CONSENT_LOCKED",
                "GOOD",
                name="accountstatus",
            ),
            nullable=False,
        ),
        sa.Column("bound_to_another_mint_user", sa.Boolean(), nullable=False),
        sa.Column("twitter_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["twitter_id"],
            ["twitter_user.id"],
        ),
        sa.PrimaryKeyConstraint("database_id"),
        sa.UniqueConstraint("auth_token"),
        sa.UniqueConstraint("backup_code"),
        sa.UniqueConstraint("ct0"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("totp_secret"),
        sa.UniqueConstraint("username"),
    )
    op.create_table(
        "mint_account",
        sa.Column("database_id", sa.Integer(), nullable=False),
        sa.Column("group", sa.String(length=16), nullable=True),
        sa.Column("name", sa.String(length=16), nullable=True),
        sa.Column("auth_token", sa.String(), nullable=True),
        sa.Column("invite_code", sa.String(length=8), nullable=True),
        sa.Column("proxy_database_id", sa.Integer(), nullable=True),
        sa.Column("mint_user_id", sa.Integer(), nullable=True),
        sa.Column("twitter_database_id", sa.Integer(), nullable=True),
        sa.Column("discord_database_id", sa.Integer(), nullable=True),
        sa.Column("wallet_address", sa.String(length=42), nullable=False),
        sa.ForeignKeyConstraint(
            ["discord_database_id"],
            ["discord_account.database_id"],
        ),
        sa.ForeignKeyConstraint(
            ["mint_user_id"],
            ["mint_user.id"],
        ),
        sa.ForeignKeyConstraint(
            ["proxy_database_id"],
            ["proxy.database_id"],
        ),
        sa.ForeignKeyConstraint(
            ["twitter_database_id"],
            ["twitter_account.database_id"],
        ),
        sa.ForeignKeyConstraint(
            ["wallet_address"],
            ["wallet.address"],
        ),
        sa.PrimaryKeyConstraint("database_id"),
        sa.UniqueConstraint("auth_token"),
    )
    op.create_index(
        op.f("ix_mint_account_group"), "mint_account", ["group"], unique=False
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_mint_account_group"), table_name="mint_account")
    op.drop_table("mint_account")
    op.drop_table("twitter_account")
    op.drop_table("mint_user")
    op.drop_table("discord_guild_join_status")
    op.drop_table("wallet")
    op.drop_table("twitter_user")
    op.drop_table("proxy")
    op.drop_index(op.f("ix_discord_account_id"), table_name="discord_account")
    op.drop_table("discord_account")
    # ### end Alembic commands ###
